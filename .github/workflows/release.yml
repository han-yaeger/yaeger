# Create a release of Yaeger

name: Create release

on:
  push:
    tags:
      - '*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Generate JavaDoc
        run: mvn compile javadoc:javadoc

      - name: Deploy JavaDoc
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/site/apidocs
          keep_files: true

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v1
        env:
          GPG_PRIVATE_KEY: ${{ secrets.OSSRH_GPG_SECRET_KEY }}

      - name: Build Project for release
        run: mvn package -P release -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "target/*.jar"
          bodyFile: "release.md"
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Apache Maven Central
        uses: actions/setup-java@v1
        with:
          java-version: 14
          server-id: ossrh
          server-username: MAVEN_CENTRAL_USERNAME
          server-password: MAVEN_CENTRAL_PASSWORD

      - name: Deploy to the Maven Central Repository
        run: mvn deploy -P release -DskipTests -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} -Dgpg.executable=gpg
        env:
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
